// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.Text
  expiresAt DateTime
}

model User {
  id        String   @id @default(cuid())
  fullname  String
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  folders Folder[]
  files   File[]
}

model Folder {
  id        Int      @id @default(autoincrement())
  name      String
  userId    String   // Changed from Int to String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  files File[]

  @@unique([name, userId])
}

model File {
  id           Int      @id @default(autoincrement())
  originalName String
  filename     String   @unique
  mimetype     String
  size         Int
  path         String
  userId       String   // Changed from Int to String
  folderId     Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  folder Folder? @relation(fields: [folderId], references: [id], onDelete: Cascade)
}