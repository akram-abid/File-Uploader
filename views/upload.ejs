<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-image: url('/assets/10298b5802e0e3a3c5b42ac024073087.jpg');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            background-attachment: fixed;
            min-height: 100vh;
            color: #ffffff;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .upload-container {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            padding: 40px;
            max-width: 500px;
            width: 100%;
        }

        .upload-title {
            font-size: 24px;
            font-weight: 600;
            margin-bottom: 20px;
            text-align: center;
        }

        .drop-zone {
            border: 2px dashed rgba(255, 255, 255, 0.3);
            border-radius: 10px;
            padding: 40px;
            text-align: center;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .drop-zone:hover {
            border-color: #667eea;
            background: rgba(102, 126, 234, 0.1);
        }

        .drop-zone.dragover {
            border-color: #667eea;
            background: rgba(102, 126, 234, 0.2);
        }

        .file-input {
            display: none;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .form-select {
            width: 100%;
            padding: 12px;
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 8px;
            background: rgba(255, 255, 255, 0.1);
            color: white;
            font-size: 16px;
        }

        .form-select option {
            background: #333;
            color: white;
        }

        .btn {
            width: 100%;
            padding: 12px;
            border: none;
            border-radius: 8px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 10px;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .back-link {
            display: block;
            text-align: center;
            color: #a0a0ff;
            text-decoration: none;
        }

        .file-list {
            margin-top: 20px;
        }

        .file-item {
            background: rgba(255, 255, 255, 0.1);
            padding: 10px;
            border-radius: 8px;
            margin-bottom: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .progress-bar {
            width: 100%;
            height: 6px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 3px;
            overflow: hidden;
            margin-top: 5px;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            transition: width 0.3s ease;
        }

        .error {
            background: rgba(244, 67, 54, 0.1);
            color: #e57373;
            padding: 10px;
            border-radius: 8px;
            margin-bottom: 20px;
            border: 1px solid rgba(244, 67, 54, 0.3);
        }

        .success {
            background: rgba(76, 175, 80, 0.1);
            color: #81c784;
            padding: 10px;
            border-radius: 8px;
            margin-bottom: 20px;
            border: 1px solid rgba(76, 175, 80, 0.3);
        }
    </style>
</head>
<body>
    <div class="upload-container">
        <h1 class="upload-title">üì§ Upload Files</h1>
        
        <% if (typeof error !== 'undefined') { %>
            <div class="error"><%= error %></div>
        <% } %>
        
        <% if (typeof success !== 'undefined') { %>
            <div class="success"><%= success %></div>
        <% } %>

        <form id="uploadForm" method="POST" action="/upload" enctype="multipart/form-data">
            <div class="drop-zone" id="dropZone">
                <div style="font-size: 48px; margin-bottom: 10px;">üìÅ</div>
                <p>Drag & drop files here or click to browse</p>
                <input type="file" id="fileInput" name="files" class="file-input" multiple>
            </div>
            
            <div class="form-group">
                <label for="folderId" class="form-label">Upload to Folder (Optional)</label>
                <select id="folderId" name="folderId" class="form-select">
                    <option value="">Root Directory</option>
                    <% if (typeof folders !== 'undefined') { %>
                        <% folders.forEach(folder => { %>
                            <option value="<%= folder.id %>"><%= folder.name %></option>
                        <% }) %>
                    <% } %>
                </select>
            </div>
            
            <div class="file-list" id="fileList"></div>
            
            <button type="submit" class="btn" id="uploadBtn" disabled>Upload Files</button>
        </form>
        
        <a href="/dashboard" class="back-link">‚Üê Back to Dashboard</a>
    </div>

    <script>
        const dropZone = document.getElementById('dropZone');
        const fileInput = document.getElementById('fileInput');
        const fileList = document.getElementById('fileList');
        const uploadBtn = document.getElementById('uploadBtn');
        const uploadForm = document.getElementById('uploadForm');
        
        let selectedFiles = [];

        // Click to browse
        dropZone.addEventListener('click', () => {
            fileInput.click();
        });

        // Drag and drop
        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.classList.add('dragover');
        });

        dropZone.addEventListener('dragleave', () => {
            dropZone.classList.remove('dragover');
        });

        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.classList.remove('dragover');
            handleFiles(e.dataTransfer.files);
        });

        // File input change
        fileInput.addEventListener('change', (e) => {
            handleFiles(e.target.files);
        });

        function handleFiles(files) {
            selectedFiles = Array.from(files);
            displayFiles();
            uploadBtn.disabled = selectedFiles.length === 0;
        }

        function displayFiles() {
            fileList.innerHTML = '';
            selectedFiles.forEach((file, index) => {
                const fileItem = document.createElement('div');
                fileItem.className = 'file-item';
                fileItem.innerHTML = `
                    <div>
                        <div>${file.name}</div>
                        <div style="font-size: 12px; opacity: 0.7;">${Math.round(file.size / 1024)} KB</div>
                    </div>
                    <button type="button" onclick="removeFile(${index})" style="background: none; border: none; color: #ff6b6b; cursor: pointer; font-size: 18px;">√ó</button>
                `;
                fileList.appendChild(fileItem);
            });
        }

        function removeFile(index) {
            selectedFiles.splice(index, 1);
            displayFiles();
            uploadBtn.disabled = selectedFiles.length === 0;
            
            // Update file input
            const dt = new DataTransfer();
            selectedFiles.forEach(file => dt.items.add(file));
            fileInput.files = dt.files;
        }

        // Form submission with progress
        uploadForm.addEventListener('submit', (e) => {
            e.preventDefault();
            
            const formData = new FormData();
            selectedFiles.forEach(file => {
                formData.append('files', file);
            });
            
            const folderId = document.getElementById('folderId').value;
            if (folderId) {
                formData.append('folderId', folderId);
            }
            
            uploadBtn.disabled = true;
            uploadBtn.textContent = 'Uploading...';
            
            fetch('/upload', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.href = '/dashboard?success=Files uploaded successfully';
                } else {
                    throw new Error(data.error || 'Upload failed');
                }
            })
            .catch(error => {
                alert('Upload failed: ' + error.message);
                uploadBtn.disabled = false;
                uploadBtn.textContent = 'Upload Files';
            });
        });
    </script>
</body>
</html>